I"Ê)<h1 id="introduction">Introduction</h1>

<p>I was doing some thinking about how best to work with rotating spectra in R,
and wanted to drop all the way down to using <code class="highlighter-rouge">fft()</code> instead of <code class="highlighter-rouge">spectrum()</code>.
For a while, I was confused about some of the results, because the lengths of
spectra created with <code class="highlighter-rouge">fft</code> were not what I expected. Then I saw that the
problem was that I was using the default value of <code class="highlighter-rouge">fast</code> in the <code class="highlighter-rouge">spectrum()</code>
function. The content of this post illustrates this.</p>

<h1 id="results-and-discussion">Results and discussion</h1>

<p>By default, the R <code class="highlighter-rouge">spectrum()</code> function sets the argument <code class="highlighter-rouge">fast=TRUE</code>. This
causes R to increase the speed of processing, but it also leads to spectrum
lengths that can be surprising.</p>

<p>The following illustrates how the length of spectra computed with <code class="highlighter-rouge">spectrum</code>
vary from the expected value of <code class="highlighter-rouge">floor(length(data)/2)</code>.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="code"><pre><span class="c1">## below shows that spectrum() does some tricky things</span><span class="w">
</span><span class="n">par</span><span class="p">(</span><span class="n">mfrow</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="w"> </span><span class="n">mar</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="w"> </span><span class="n">mgp</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="m">0.7</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">))</span><span class="w">
</span><span class="n">set.seed</span><span class="p">(</span><span class="m">123</span><span class="p">)</span><span class="w">
</span><span class="n">x</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">12</span><span class="o">:</span><span class="m">200</span><span class="w">
</span><span class="c1">## fast=TRUE is the default</span><span class="w">
</span><span class="n">speclenT</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">lapply</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">spec.pgram</span><span class="p">(</span><span class="n">rnorm</span><span class="p">(</span><span class="n">n</span><span class="p">),</span><span class="n">plot</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">,</span><span class="n">fast</span><span class="o">=</span><span class="kc">TRUE</span><span class="p">)</span><span class="o">$</span><span class="n">freq</span><span class="p">)))</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">speclenT</span><span class="p">,</span><span class="w"> </span><span class="n">type</span><span class="o">=</span><span class="s2">"s"</span><span class="p">,</span><span class="w"> </span><span class="n">xlab</span><span class="o">=</span><span class="s2">"x length"</span><span class="p">,</span><span class="w"> </span><span class="n">ylab</span><span class="o">=</span><span class="s2">"spectrum length"</span><span class="p">)</span><span class="w">
</span><span class="n">legend</span><span class="p">(</span><span class="s2">"topleft"</span><span class="p">,</span><span class="w"> </span><span class="n">lwd</span><span class="o">=</span><span class="n">par</span><span class="p">(</span><span class="s2">"lwd"</span><span class="p">),</span><span class="w"> </span><span class="n">col</span><span class="o">=</span><span class="m">1</span><span class="o">:</span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">legend</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"spectrum() with fast=TRUE"</span><span class="p">,</span><span class="w"> </span><span class="s2">"2:1 line"</span><span class="p">))</span><span class="w">
</span><span class="n">abline</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="o">/</span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="o">=</span><span class="m">2</span><span class="p">)</span><span class="w">
</span><span class="n">speclenF</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">lapply</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">spec.pgram</span><span class="p">(</span><span class="n">rnorm</span><span class="p">(</span><span class="n">n</span><span class="p">),</span><span class="n">plot</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">,</span><span class="n">fast</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span><span class="o">$</span><span class="n">freq</span><span class="p">)))</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">speclenF</span><span class="p">,</span><span class="w"> </span><span class="n">type</span><span class="o">=</span><span class="s2">"s"</span><span class="p">,</span><span class="w"> </span><span class="n">xlab</span><span class="o">=</span><span class="s2">"x length"</span><span class="p">,</span><span class="w"> </span><span class="n">ylab</span><span class="o">=</span><span class="s2">"spectrum length"</span><span class="p">)</span><span class="w">
</span><span class="n">legend</span><span class="p">(</span><span class="s2">"topleft"</span><span class="p">,</span><span class="w"> </span><span class="n">lwd</span><span class="o">=</span><span class="n">par</span><span class="p">(</span><span class="s2">"lwd"</span><span class="p">),</span><span class="w"> </span><span class="n">col</span><span class="o">=</span><span class="m">1</span><span class="o">:</span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">legend</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"spectrum() with fast=FALSE"</span><span class="p">,</span><span class="w"> </span><span class="s2">"2:1 line"</span><span class="p">))</span><span class="w">
</span><span class="n">abline</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="o">/</span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="o">=</span><span class="m">2</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p><img src="http://dankelley.github.io/figs/2017-12-21-spectrum-length/unnamed-chunk-1-1.png" alt="center" /></p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
</pre></td><td class="code"><pre><span class="n">print</span><span class="p">(</span><span class="n">head</span><span class="p">(</span><span class="n">speclenT</span><span class="p">))</span>
</pre></td></tr></tbody></table></code></pre></figure>

<figure class="highlight"><pre><code class="language-text" data-lang="text">## [1] 6 7 7 7 8 9</code></pre></figure>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
</pre></td><td class="code"><pre><span class="n">print</span><span class="p">(</span><span class="n">head</span><span class="p">(</span><span class="n">speclenF</span><span class="p">))</span>
</pre></td></tr></tbody></table></code></pre></figure>

<figure class="highlight"><pre><code class="language-text" data-lang="text">## [1] 6 6 7 7 8 8</code></pre></figure>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
</pre></td><td class="code"><pre><span class="n">all.equal</span><span class="p">(</span><span class="n">speclenF</span><span class="p">,</span><span class="w"> </span><span class="nf">floor</span><span class="p">(</span><span class="n">x</span><span class="o">/</span><span class="m">2</span><span class="p">))</span>
</pre></td></tr></tbody></table></code></pre></figure>

<figure class="highlight"><pre><code class="language-text" data-lang="text">## [1] TRUE</code></pre></figure>

<h1 id="conclusion">Conclusion</h1>

<p>If the results of <code class="highlighter-rouge">spectrum</code> and <code class="highlighter-rouge">fft</code> are to be put on an equal footing, e.g. for numerical
comparisons, then it makes sense to call the former as e.g. <code class="highlighter-rouge">spectrum(..., fast=FALSE)</code>.</p>

<h1 id="reference-and-resources">Reference and resources</h1>

<ol>
  <li>Jekyll source code for this blog entry: <a href="https://raw.github.com/dankelley/dankelley.github.io/master/assets/2017-12-21-spectrum-length.Rmd">2017-12-21-spectrum-length.Rmd</a></li>
</ol>
:ET