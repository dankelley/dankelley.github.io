I"š<p>With base graphics, a histogram of 100 million points</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
</pre></td><td class="code"><pre><span class="n">d</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">rnorm</span><span class="p">(</span><span class="m">1e8</span><span class="p">))</span><span class="w">
</span><span class="n">system.time</span><span class="p">(</span><span class="n">hist</span><span class="p">(</span><span class="n">x</span><span class="p">))</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>takes just</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>     user  system elapsed
    0.044   0.004   0.052
</code></pre></div></div>
<p>which means that the result is ready as my pinkie finger is rising from the
â€˜Returnâ€™ key.</p>

<p>In contrast, if I use ggplot as in</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
</pre></td><td class="code"><pre><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">
</span><span class="n">system.time</span><span class="p">({</span><span class="n">p</span><span class="o">&lt;-</span><span class="n">ggplot</span><span class="p">(</span><span class="n">d</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_histogram</span><span class="p">();</span><span class="n">print</span><span class="p">(</span><span class="n">p</span><span class="p">)})</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>I find I have to wait <em>much</em> longer.  The results are</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
     user  system elapsed
   43.877  13.766  60.200
</code></pre></div></div>
<p>so this sub-second task has ballooned to a full minute.  Since this is not a
large dataset in my line of work, the test shows that my brand-new machine acts
more like something from the 1980s.</p>

<p>I liked the eighties, but I donâ€™t want to go back to its computing power.</p>

<p>And now that Iâ€™m revealing myself to be a cranky old fart, Iâ€™ll add two more
complaints about ggplot defaults:</p>

<ol>
  <li>The function ought to choose an appropriate binwidth, instead of saying that
it has chosen a poor default.</li>
  <li>While the ggplot graph looks pretty enough for a magazine, this default
low-contrast style can be a problem for some viewers and some
printing/reproduction methods.</li>
</ol>

<h1 id="references-and-resources">References and resources</h1>

<ol>
  <li>Jekyll source code for this blog entry: <a href="https://raw.github.com/dankelley/dankelley.github.io/master/assets/2020-09-30-dislike-ggplot.Rmd">2020-09-30-dislike-ggplot.Rmd</a></li>
</ol>

:ET